{"version":3,"sources":["reducers/notificationReducer.js","services/loginService.js","services/blogs.js","reducers/userReducer.js","components/Notification.js","components/Loginform.js","components/Home.js","reducers/blogsReducer.js","components/Blog.js","components/Blogs.js","components/createForm.js","services/usersService.js","reducers/usersReducer.js","components/User.js","components/Users.js","components/Welcomeform.js","App.js","store.js","index.js"],"names":["initialmessage","message","type","timeoutID","undefined","setNotification","clearTimeout","dispatch","a","data","setTimeout","resetNotification","notificationReducer","state","action","login","credentials","axios","post","response","token","createBlog","newBlog","config","headers","authorization","likeABlog","likedBlog","put","id","commentABlog","commentedBlog","getAll","get","then","setToken","newToken","deleteABlog","blogToDelete","delete","user","loginService","window","localStorage","setItem","JSON","stringify","blogsService","userReducer","Notification","useSelector","notification","style","fontSize","Alert","severity","Loginform","useState","username","setuserName","password","setPassword","useDispatch","handleChange","event","target","name","value","handleSubmit","preventDefault","padding","onSubmit","TextField","onChange","label","paddingTop","Button","variant","color","text","Home","blog","deleteblog","blogsReducer","map","filter","Blog","commentfield","setCommentfield","history","useHistory","useParams","blogs","find","handleDelete","confirm","title","push","author","href","url","likes","onClick","like","loggedUser","parse","getItem","showDeleteButton","comments","comment","key","concat","Blogs","sort","blog1","blog2","path","Table","TableHead","TableRow","TableCell","TableBody","to","Createform","setTitle","setAuthor","setUrl","handleCreate","error","console","log","usersReducer","User","users","Users","useEffect","usersService","b","length","TableContainer","component","Paper","Welcomeform","clear","App","userJSON","Container","AppBar","position","Typography","paddingLeft","visited","Toolbar","Grid","justify-content","container","Link","top","width","marginTop","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2951d24c.chunk.js","sourcesContent":["\nconst initialmessage = {\n  message : '',\n  type : 'success'\n}\n\nconst notificationReducer = (state = initialmessage, action) => {\n  //console.log('reducer FIRES!')\n  switch(action.type){\n  case 'RESET':\n    return initialmessage\n  case 'SET':\n    return action.data\n  default:\n    return state\n  }\n}\n\nlet timeoutID = undefined\n\nexport const setNotification = (message,type) => {\n  if (timeoutID) {\n    clearTimeout(timeoutID)\n    timeoutID = undefined\n  }\n  return async dispatch => {\n    dispatch({ type: 'SET', data : { message,type } })\n    timeoutID = (setTimeout(() => dispatch(resetNotification()),4000))\n  }\n}\n\nexport const resetNotification = () => {\n  return {\n    type: 'RESET',\n    data : ''\n  }\n}\n\n\nexport default notificationReducer","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\n\nconst baseUrl = '/api/blogs'\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst createBlog = async(newBlog) => {\n  const config = {\n    headers : { authorization : token }\n  }\n  const response = await axios.post(baseUrl,newBlog,config)\n  return response\n}\n\nconst likeABlog = async (likedBlog) => {\n  const response = await axios.put(`${baseUrl}/${likedBlog.id}`,likedBlog)\n  return response\n}\n\nconst commentABlog = async (commentedBlog) => {\n  const response = await axios.post(`${baseUrl}/${commentedBlog.id}`,commentedBlog)\n  return response\n}\n\nconst deleteABlog = async (blogToDelete) => {\n  const config = {\n    headers : { authorization : token }\n  }\n  const response = await axios.delete(`${baseUrl}/${blogToDelete}`,config)\n  return response\n}\n\n\nexport default { getAll,setToken,createBlog, likeABlog, deleteABlog,commentABlog }","import loginService from '../services/loginService'\nimport blogsService from '../services/blogs'\n\n\nconst userReducer = (state = null, action) => {\n  switch(action.type){\n  case('LOGIN'):\n    return action.data\n  case('LOGOUT'):\n    return null\n  default :\n    return state\n  }\n}\n\nexport const login = (user) => {\n  return async dispatch => {\n    const response = await loginService.login(user)\n    window.localStorage.setItem('LoggedUser', JSON.stringify(response))\n    blogsService.setToken(response.token)\n    dispatch({ type: 'LOGIN', data : user })\n  }\n}\n\nexport const initializeUser = () => {\n  return async dispatch => {\n    const userJSON = window.localStorage.getItem('LoggedUser')\n    if (userJSON) {\n      const user = JSON.parse(userJSON)\n      blogsService.setToken(user.token)\n      dispatch({ type : 'LOGIN' , data : user })\n    }\n  }\n}\n\nexport const logout = () => {\n  window.localStorage.clear()\n  blogsService.setToken(null)\n  return {\n    type : 'LOGOUT',\n    data : null\n  }\n}\n\n\nexport default userReducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Alert } from '@material-ui/lab'\n\nconst Notification = () => {\n\n\n  const message = useSelector(state => state.notification.message)\n  const type = useSelector(state => state.notification.type)\n  if (message === ''){\n    return null\n  }\n  const style = {\n    fontSize : 50,\n  }\n\n  return (\n    <div style = {style}>\n      <Alert severity= {type}>\n        {message}\n      </Alert>\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { login } from '../reducers/userReducer'\nimport { useDispatch } from 'react-redux'\nimport Notification from './Notification'\n\nimport {\n  TextField,\n  Button\n} from '@material-ui/core'\n\nconst Loginform = () => {\n\n  const [username, setuserName] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n\n  const handleChange = (event) => {\n    if (event.target.name === 'username'){\n      setuserName(event.target.value)\n    }\n    if (event.target.name === 'password'){\n      setPassword(event.target.value)\n    }\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    try {\n      await dispatch(login({ username,password }))\n      setuserName('')\n      setPassword('')\n      dispatch(setNotification('Successfully logged in'))\n    } catch (error) {\n      dispatch(setNotification('Wrong Credentials', 'error'))\n    }\n  }\n\n  const padding = {\n    padding : 20\n  }\n  const paddingtop = {\n    paddingTop : 20\n  }\n\n  return (\n    <div style= {padding}>\n      <h2>Log in</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <TextField onChange={handleChange} label = \"username\" id=\"username\" name=\"username\"></TextField>\n        </div>\n        <div>\n          <TextField onChange={handleChange} label = \"password\" type=\"password\" id=\"password\" name=\"password\"></TextField>\n        </div>\n        <div style= {paddingtop}>\n          <Button type ='submit' variant = 'contained' color = 'primary' id=\"loginButton\" text=\"Log in\">Log in</Button>\n        </div>\n        <div>\n          <Notification />\n        </div>\n        <div>\n          <h2>Testikäyttäjä </h2>\n          <h3>Käyttäjätunnus : Testi</h3>\n          <h3>Salasana : Testi123</h3>\n        </div>\n      </form>\n    </div>\n  )\n}\n\n\nexport default Loginform","import React from 'react'\n\nconst Home = () => {\n  return (\n    <>\n      <h1>Tervetuloa blogisovellukseen</h1>\n      <p>Users - välilehdeltä näet muut käyttäjät ja pystyt katsomaan heidän lisäämänsä blogit</p>\n      <p>Blogs - välilehdeltä näet kaikki blogit. Voit lisätä omia blogeja, sekä tykätä ja kommentoida muita blogeja</p>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non dui quis neque vulputate lacinia. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque mattis, ligula quis vestibulum convallis, neque risus venenatis odio, eu fringilla neque lacus nec erat. Sed et nisl congue, commodo nibh ac, lobortis leo. Donec molestie mi tincidunt nunc pretium lacinia. Ut sagittis blandit ligula sed dapibus. Donec vitae orci sed quam dictum bibendum. Sed et maximus ex. Aenean pretium aliquet nisi, vel tincidunt massa volutpat semper. Nam sodales dui eget sagittis gravida. Maecenas ac scelerisque sem, et tempus tortor.</p>\n      <p>Vestibulum eu justo hendrerit, pulvinar orci ut, rutrum enim. Aenean blandit congue convallis. Phasellus id felis nec diam blandit tempor. Mauris sit amet felis sit amet felis lacinia congue. Praesent bibendum dignissim felis non vehicula. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris elementum nec ante a eleifend. Donec tristique facilisis urna, vel efficitur lorem finibus eget. Donec id justo magna.</p>\n      <p>Nunc pellentesque augue vel ligula condimentum, nec sollicitudin massa fermentum. Nullam blandit orci neque, quis tempor elit semper eget. Aliquam lacinia urna quis neque tempor vulputate. Nam vel lacus a mi consectetur maximus. Maecenas nec erat aliquam, imperdiet turpis at, efficitur nibh. Mauris aliquam lectus ultrices mi ullamcorper varius. Vestibulum gravida, ligula quis luctus varius, eros tellus pellentesque eros, sit amet cursus nunc velit in augue.</p>\n    </>\n  )\n}\n\nexport default Home","import blogsService from '../services/blogs'\n\nconst blogsReducer = (state = [],action) => {\n  switch(action.type){\n  case 'INIT':\n    return action.data\n  case 'CREATE_NEW':\n    return [...state, action.data]\n  case 'LIKE':\n    return state.map(blog => blog.id !== action.data.id ? blog : action.data)\n  case 'DELETE':\n    return state.filter(blog => blog.id !== action.data.id)\n  case 'ADDCOMMENT':\n    return state.map(blog => blog.id !== action.data.id ? blog : action.data)\n  default:\n    return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogsService.getAll()\n    dispatch({\n      type: 'INIT',\n      data: blogs })\n  }\n}\n\nexport const createBlog = (blog) => {\n  return async dispatch => {\n    const response = await blogsService.createBlog(blog)\n    dispatch({ type: 'CREATE_NEW',data: response.data })\n  }\n}\n\nexport const like = (blog) => {\n  return async dispatch => {\n    const likedBlog = { ...blog, likes : blog.likes + 1 }\n    await blogsService.likeABlog(likedBlog)\n    dispatch({ type: 'LIKE', data:likedBlog })\n  }\n}\n\nexport const comment = (blog, comment) => {\n  return async dispatch => {\n    const commentedBlog = { ...blog, comments : blog.comments.concat(comment) }\n    await blogsService.commentABlog(commentedBlog)\n    dispatch({ type: 'ADDCOMMENT', data : commentedBlog })\n  }\n}\n\nexport const deleteblog = (blog) => {\n  return async dispatch => {\n    await blogsService.deleteABlog(blog.id)\n    dispatch({ type: 'DELETE', data:blog })\n  }\n}\n\n\nexport default blogsReducer","import React from 'react'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { like, deleteblog,comment } from '../reducers/blogsReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { useHistory, useParams } from 'react-router-dom'\n\nconst Blog = () => {\n\n  const [commentfield,setCommentfield] = useState('')\n\n  const history = useHistory()\n  const id = useParams().id\n  const blogs = useSelector(state => state.blogs)\n  const blog = blogs.find(blog => blog.id === id)\n\n  const dispatch = useDispatch()\n\n  const handleLike = () => {\n    dispatch(like(blog))\n    dispatch(setNotification(`liked ${blog.title}`))\n  }\n\n  const handleDelete = async() => {\n    const ok = window.confirm(`You really wanna delete ${blog.title}?`)\n    if (ok){\n      dispatch(deleteblog(blog))\n      dispatch(setNotification(`deleted ${blog.title}`))\n      history.push('/')\n    }\n  }\n\n  const showDeleteButton = () => {\n    const loggedUser = JSON.parse(window.localStorage.getItem('LoggedUser'))\n    if(blog.user.username === loggedUser.username){\n      return <button value = {blog.id} onClick = {handleDelete}>delete this blog</button>\n    }\n    return null\n  }\n  const handleComment = () => {\n    dispatch(comment(blog,commentfield))\n  }\n\n\n  if (!blog){\n    return null\n  }\n  return (\n    <>\n      <div>\n        <p>Author : {blog.author}</p>\n        <p>Title : {blog.title}</p>\n        <p>Url : <a href=\"https://www.google.com\">{blog.url}</a></p>\n        <p>Likes : {blog.likes} <button value={blog.id} onClick={handleLike}>like</button></p>\n        <p>User : {blog.user.username} {showDeleteButton()}</p>\n        <p>Comments : </p>\n        <ul>\n          {blog.comments.map(comment => <li key={comment}>{comment}</li>)}\n        </ul>\n        <input type ='text' onChange={({ target }) => setCommentfield(target.value)}></input>\n        <button onClick={handleComment}>add comment</button>\n      </div>\n    </>\n  )\n}\n\nexport default Blog\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Route,Link, Switch } from 'react-router-dom'\nimport Blog from './Blog'\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TableHead\n} from '@material-ui/core'\n\n\nconst Blogs = () => {\n\n  const blogs = useSelector(state => state.blogs.sort((blog1,blog2) => blog2.likes - blog1.likes))\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/blogs/:id'>\n          <Blog/>\n        </Route>\n        <Route path='/blogs'>\n          <h2> blogs</h2>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Title</TableCell>\n                <TableCell>Added by</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {blogs.map(blog =>\n                <TableRow key={blog.id}>\n                  <TableCell><Link to={`/blogs/${blog.id}`}>{blog.title}</Link></TableCell>\n                  <TableCell>{blog.user.name}</TableCell>\n                </TableRow>)}\n            </TableBody>\n          </Table>\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default Blogs","import React,{ useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { useDispatch } from 'react-redux'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { createBlog } from '../reducers/blogsReducer'\n\nconst Createform = () => {\n  const dispatch = useDispatch()\n\n  const [title,setTitle] = useState('')\n  const [author,setAuthor] = useState('')\n  const [url,setUrl] = useState('')\n\n  const handleCreate = async (event) => {\n    event.preventDefault()\n    try {\n      dispatch(createBlog({ title, author, url }))\n      dispatch(setNotification(`added ${title} by ${author}`))\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <>\n      <h1>Create new</h1>\n      <table>\n        <tbody>\n          <tr>\n            <th>Title: </th>\n            <th>Author: </th>\n            <th>Url:</th>\n          </tr>\n          <tr>\n            <td><input id='titleinput' onChange={({ target }) => setTitle(target.value)} ></input></td>\n            <td><input id='authorinput' onChange={({ target }) => setAuthor(target.value)} ></input></td>\n            <td><input id='urlinput' onChange={({ target }) => setUrl(target.value)} ></input></td>\n            <td><Button id='blogsubmitbutton'onClick={handleCreate}>create</Button></td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nexport default Createform","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll\n}","\nimport usersService from '../services/usersService'\n\n\nconst usersReducer = (state = null, action) => {\n  switch(action.type){\n  case ('INITIALIZE'):\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const response = await usersService.getAll()\n    dispatch({ type : 'INITIALIZE', data : response })\n  }\n}\n\n\n\nexport default usersReducer","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst User = () => {\n  const id = useParams().id\n  const users = useSelector(state => state.users)\n  const user = users.find(user => user.id === id)\n\n  if (!user){\n    return null\n  }\n  return (\n    <>\n      <h1>\n        {user.name}\n      </h1>\n      <h2>Added blogs</h2>\n      <ul>\n        {user.blogs.map(blog => <li key = {blog.id}>{blog.title}</li>)}\n      </ul>\n    </>\n  )\n}\n\nexport default User","import React,{ useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initializeUsers } from '../reducers/usersReducer'\nimport { Link,BrowserRouter as Router,Switch,Route } from 'react-router-dom'\nimport User from './User'\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Paper,\n  TableHead\n} from '@material-ui/core'\n\n\nconst Users = () => {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  },[dispatch])\n\n  const users = useSelector(state => state.users)\n  if (!users){\n    return null\n  }\n  users.sort((a,b) => b.blogs.length - a.blogs.length)\n  return (\n    <Router>\n      <Switch>\n        <Route path='/users/:id'>\n          <User/>\n        </Route>\n        <Route path = '/'>\n          <h1>Users</h1>\n          <TableContainer component = {Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>name</TableCell>\n                  <TableCell>Blogs</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.map(user =>\n                  <TableRow key={user.id}>\n                    <TableCell>\n                      <Link to={`/users/${user.id}`}>\n                        {user.name}\n                      </Link>\n                    </TableCell>\n                    <TableCell>\n                      {user.blogs.length}\n                    </TableCell>\n                  </TableRow>)}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default Users","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout } from '../reducers/userReducer'\nimport { useHistory } from 'react-router-dom'\n\nconst Welcomeform = () => {\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n  const history = useHistory()\n  const handleLogOut = (event) => {\n    event.preventDefault()\n    dispatch(logout())\n    dispatch(setNotification('Successfully logged out'))\n    history.push('/')\n  }\n\n  return (\n    <>\n      <div>\n        {user.name} logged in <Button color = 'inherit' id='logOutButton' onClick={handleLogOut} text='log out'>log out</Button>\n      </div>\n    </>\n  )\n}\n\nexport default Welcomeform","import React, { useEffect } from 'react'\nimport Loginform from './components/Loginform'\nimport Home from './components/Home'\nimport Blogs from './components/Blogs.js'\nimport Createform from './components/createForm'\nimport Notification from './components/Notification'\nimport Users from './components/Users'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initializeBlogs } from './reducers/blogsReducer'\nimport { initializeUser } from './reducers/userReducer'\nimport { BrowserRouter as Router,\n  Switch,Route,Link } from 'react-router-dom'\n\nimport Container from '@material-ui/core/Container'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Welcomeform from './components/Welcomeform'\n\nconst App = () => {\n\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n    dispatch(initializeUser())\n  },[dispatch])\n\n\n  const linkStyle =  {\n    paddingLeft : 20,\n    color : 'white',\n    visited : 'white'\n  }\n  const containerStyle =  {\n    padding : 80,\n  }\n  const footerStyle =  {\n    position: 'fixed',\n    top : 0,\n    width: '100%',\n    marginTop: '98vh',\n  }\n  return (\n    <Container style={containerStyle}>\n      <Router>\n        <div>\n          {user === null\n            ? <>\n              <Loginform />\n            </>\n            : <>\n              <AppBar variant='outlined' position='absolute'>\n              <Typography>\n              <a style={linkStyle} href='https://github.com/JRamone/FullStack2020'>\n                https://github.com/JRamone/FullStack2020\n              </a>\n            </Typography>\n                <Toolbar>\n                  <Grid\n                    justify-content = 'left'\n                    container\n                  >\n                    <Button color='inherit' component={Link} to='/'>home</Button>\n                    <Button color='inherit' component={Link} to='/users'>users</Button>\n                    <Button color='inherit' component={Link} to='/blogs'>blogs</Button>\n                    <Notification/>\n                  </Grid>\n                  <Grid justify-content='end'>\n                    <Welcomeform/>\n                  </Grid>\n                </Toolbar>\n              </AppBar>\n              <Switch>\n                <Route path='/users'>\n                  <Users/>\n                </Route>\n                <Route path='/blogs'>\n                  <Createform />\n                  <Blogs />\n                </Route>\n                <Route path='/'>\n                  <Home/>\n                </Route>\n              </Switch>\n            </>}\n          <AppBar style={footerStyle}>\n  \n          </AppBar>\n        </div>\n      </Router>\n    </Container>\n  )\n}\n\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport notificationReducer from './reducers/notificationReducer'\nimport blogsReducer from './reducers/blogsReducer'\nimport userReducer from './reducers/userReducer'\nimport usersReducer from './reducers/usersReducer'\n\nconst reducer = combineReducers({\n  notification : notificationReducer,\n  blogs : blogsReducer,\n  user : userReducer,\n  users : usersReducer\n})\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}